- hosts: proxmox
  vars:
    ansible_python_interpreter: "/root/venv/proxmox/bin/python"
  tasks:
    - name: Include vars from a file
      include_vars:
        file: varsfile.yml

    - name: Download ubuntu 22.04 Jammy cloud init image
      get_url:
        url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img
        dest: /opt/jammy-server-cloudimg-amd64.img

    - name:
      shell: virt-customize --install qemu-guest-agent -a /opt/jammy-server-cloudimg-amd64.img

    - name: Create empty VM using Cloud-Init
      community.general.proxmox_kvm:
        node: "{{ node_name }}"
        api_user: "{{ lookup('passwordstore', 'pve/user') }}"
        api_password: "{{ lookup('passwordstore', 'pve/password') }}"
        api_host: "{{ node_host }}"
        ciuser: "{{ lookup('passwordstore', 'ci/user') }}"
        cipassword: "{{ lookup('passwordstore', 'ci/password') }}"
        name: ubuntu-cloud-22.04
        vmid: 8000
        cores: 2
        memory: 2048
        net:
          net0: "virtio,bridge=vmbr0"
        scsihw: virtio-scsi-pci
        scsi:
          scsi0: "{{disk_name}}:1"
        ide:
          ide2: "{{disk_name}}:cloudinit"
        bootdisk: scsi0
        boot: c
        vga: serial0
        ipconfig:
          ipconfig0: "ip=dhcp"

    - name: Import init disk
      shell: "qm importdisk 8000 /opt/jammy-server-cloudimg-amd64.img {{disk_name}}"
      args:
        creates: "/dev/mapper/{{disk_name}}-vm--8000--disk--1"

    - name: Attach base image disk
      ansible.builtin.lineinfile:
        path: /etc/pve/local/qemu-server/8000.conf
        regexp: "^scsi0:.*"
        line: "scsi0: {{disk_name}}:vm-8000-disk-1"

    - name: Convert VM to template
      community.general.proxmox_kvm:
        node: "{{ node_name }}"
        api_user: "{{ lookup('passwordstore', 'pve/user') }}"
        api_password: "{{ lookup('passwordstore', 'pve/password') }}"
        api_host: "{{ node_host }}"
        vmid: 8000
        name: ubuntu-cloud-22.04
        scsihw: virtio-scsi-pci
        ide:
          ide2: "{{disk_name}}:cloudinit"
        bootdisk: scsi0
        ciuser: "{{ lookup('passwordstore', 'ci/user') }}"
        cipassword: "{{ lookup('passwordstore', 'ci/password') }}"        
        template: yes
        update: yes
